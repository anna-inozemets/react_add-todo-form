{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","todosWithUsers","App","useState","setTitle","setUserId","isTitleError","setTitleError","isUserError","setUserError","visibleTodos","setVisibleTodos","maxId","Math","max","onSubmit","event","preventDefault","newTodo","Number","type","placeholder","value","onChange","target","htmlFor","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31d00948.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import classNames from 'classnames';\nimport { FullTodo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: FullTodo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { FullTodo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: FullTodo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport { User } from './types/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todosWithUsers = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const defaultTitle = '';\n  const defaultUserId = '';\n\n  const [title, setTitle] = useState(defaultTitle);\n  const [userId, setUserId] = useState(defaultUserId);\n  const [isTitleError, setTitleError] = useState(false);\n  const [isUserError, setUserError] = useState(false);\n  const [visibleTodos, setVisibleTodos] = useState(todosWithUsers);\n\n  let maxId = Math.max(...todosWithUsers.map(todo => todo.id));\n\n  const createNewTodo = () => {\n    maxId += 1;\n\n    return ({\n      id: maxId,\n      title,\n      completed: false,\n      userId: Number(userId),\n      user: getUserById(Number(userId)),\n    });\n  };\n\n  const handleAddNewTodo = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setTitleError(!title);\n    setUserError(!userId);\n\n    if (title && userId) {\n      const newTodo = createNewTodo();\n\n      setVisibleTodos([\n        ...visibleTodos,\n        newTodo,\n      ]);\n\n      setTitle(defaultTitle);\n      setUserId(defaultUserId);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title is-2 is-spaced\">Add todo form</h1>\n\n      <form onSubmit={handleAddNewTodo} className=\"App__form\">\n        <div className=\"App__field field\">\n          <label>\n            Title:\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              className=\"input is-warning is-rounded is-normal\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setTitleError(false);\n              }}\n            />\n            {isTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )}\n          </label>\n        </div>\n\n        <div className=\"App__field field\">\n          <label htmlFor=\"userSelect\">\n            User:\n          </label>\n\n          <div className=\"select is-warning is-rounded\">\n            <select\n              id=\"userSelect\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(event.target.value);\n                setUserError(false);\n              }}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-success\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}